ContextMap EventForumNET {
	contains ForumContext
	contains UserManagementContext

	ForumContext [D] <- [U, OHS] UserManagementContext {
		implementationTechnology = "EventBus"
	}
}

BoundedContext ForumContext implements ForumDomain {
	domainVisionStatement "This Bounded Context manages the Chat Forum content"
	responsibilities ="Message management"
	Aggregate Messaging {
		Entity Forum {
			aggregateRoot
			String forumId
			String forumName
			List<message> messages
			Repository MessageRepository {
				findByQuery;
	            save publish MessageEvent to MessageChannel; 
				findAll;

	}
		}
		Entity Message {
			String messageId
			String messageText
			String forumId
			String userId
		}
		DomainEvent MessageEvent {
			Date createDate
			String eventId
			- @Message message
		}
		Service MessageService {
			String Add (@Message message); // Returns message Id GUID as string
			@Message Update (@Message message);
		}
		Service MessageEventService {
			@MessageEvent MessageAdded(@Message message)
				publish to MessageChannel;
			@MessageEvent MessageUpdated(@Message message)
				publish to MessageChannel;
		}
	}
	Aggregate ForumUsers {
		Entity ForumUser {
			aggregateRoot
				String userId
				String nickname
				Boolean active
		}
		
		Service UserEventReceivingService {
			subscribe to UserChannel
			@UserDTO UserCreatedEvent();
			@UserDTO UserAddedEvent();
			reset;
		}
	}
}

BoundedContext UserManagementContext implements UserDomain {
	domainVisionStatement "This Bounded Context manages the user information"
	responsibilities ="User adding and updating"
	Aggregate SystemUser {
		Entity User {
			aggregateRoot
			String userId
			String firstName
			String lastName
			String nickname
			Boolean active
			Repository UserRepository {
				findById;
	            save; 
	            findAll;
            }
		}
		
		DataTransferObject UserDTO {
			String userId
			String nickname
			boolean active
		}
		
		DomainEvent UserEvent {
			Date createDate
			String id
			- @UserDTO user
		}
		
		Service UserService {
			String AddUser(@User user); // Returns user Id GUID as String
			@User updateUser(@User user);
		}
		Service UserEventService {
			@UserEvent UserCreatedEvent(@User user) 
			publish to UserChannel;
			@UserEvent UserUpdatedEvent (@User user) 
			publish to UserChannel;
		}
	}
}

/* Domain & Subdomain Definitions */
Domain EventForumDomain {
	Subdomain ForumDomain {
		type=CORE_DOMAIN
		domainVisionStatement="Subdomain managing forum messages"
	}

	Subdomain UserDomain {
		type=SUPPORTING_DOMAIN
		domainVisionStatement="Subdomain managing users"
	}

}

